# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'body':
    'ctrl-q': 'window:close'
    'ctrl-shift-w': 'core:close'
    'ctrl-tab ^ctrl': 'unset!'
    'ctrl-tab': 'pane:show-next-item'
    'ctrl-shift-tab ^ctrl': 'unset!'
    'ctrl-shift-tab': 'pane:show-previous-item'
    'ctrl-`': 'pane:show-next-recently-used-item'
    'ctrl-~': 'pane:show-previous-recently-used-item'
    'ctrl-shift-C': 'core:copy'
    'ctrl-shift-V': 'core:paste'

'atom-text-editor:not([mini])':
    'ctrl-shift-C': 'unset!'

'atom-text-editor.vim-mode-plus.normal-mode':
    ':': 'vim-mode-plus-ex-mode:open'
    '!': 'vim-mode-plus-ex-mode:toggle-setting'

    'S': 'vim-mode-plus:surround-smart-word'
    's': 'vim-mode-plus:surround'
    's d': 'vim-mode-plus:delete-surround-any-pair'
    's c': 'vim-mode-plus:change-surround-any-pair'
    's w': 'vim-mode-plus:surround-word'
    's m': 'vim-mode-plus:map-surround'

'atom-text-editor.vim-mode-plus.visual-mode':
    'S': 'vim-mode-plus:surround'

'.platform-win32, .platform-linux':
    'ctrl-shift-f': 'find-and-replace:show'
    'ctrl-alt-shift-f': 'project-find:show'
